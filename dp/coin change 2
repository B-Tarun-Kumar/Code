import java.util.*;
public class Solution {
	public static long soln(int i,int arr[],int target,long dp[][]){
		if(i==0){
			if(target%arr[i]==0){
				return 1;
			}
			return 0;
		}
		if(dp[i][target]!=-1){
			return dp[i][target];
		}
		long notake=soln(i-1,arr,target,dp);
		long take=0;
		if(arr[i]<=target){
			take=soln(i,arr,target-arr[i],dp);

		}
		return dp[i][target]=take+notake;

	}

	public static long countWaysToMakeChange(int denominations[], int value){
        //write your code here
		long dp[][]=new long[denominations.length][value+1];
		for(long arr1[]:dp){
			Arrays.fill(arr1,-1);
		}
		return soln(denominations.length-1,denominations,value,dp);			

	}
	
}
